<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.librecoder.awesome</groupId>
	<artifactId>awesome-bom</artifactId>
	<version>2.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>awesome-bom</name>
	<url>https://www.librecoder.com</url>
	<description>librecoder</description>
	<organization>
		<name>librecoder</name>
		<url>https://www.librecoder.com</url>
	</organization>

	<modules>
		<module>awesome-build-tools</module>
		<module>awesome-base</module>
	</modules>

	<!-- region 属性配置 -->
	<properties>
		<maven.test.skip>true</maven.test.skip>
		<java.version>1.8</java.version>
		<file.encoding>UTF-8</file.encoding>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>${file.encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${file.encoding}</project.reporting.outputEncoding>
		<project.dependencies.scope.provided>provided</project.dependencies.scope.provided>
		<project.activeProfile>dev</project.activeProfile>

		<start-class></start-class>
		<package.dependencyDirectory>dependency</package.dependencyDirectory>
		<includeScope>runtime</includeScope>

		<module.project.version>2.0.1-SNAPSHOT</module.project.version>
		<maven.jetty.version>9.2.2.v20140723</maven.jetty.version>
		<maven.tomcat.version>2.2</maven.tomcat.version>

		<maven.lombok.version>1.18.20</maven.lombok.version>
		<maven.groovy.version>2.5.14</maven.groovy.version>

		<spring-boot.version>2.3.9.RELEASE</spring-boot.version>
		<spring-cloud.version>Hoxton.SR10</spring-cloud.version>

		<dependency.junit-jupiter.version>5.6.3</dependency.junit-jupiter.version>
		<dependency.junit.version>4.13.2</dependency.junit.version>
		<dependency.h2.version>1.4.200</dependency.h2.version>
		<dependency.hsqldb.version>2.5.1</dependency.hsqldb.version>
		<dependency.mockito.version>3.3.3</dependency.mockito.version>
		<dependency.mybatis-spring.version>2.1.4</dependency.mybatis-spring.version>
	</properties>
	<!-- endregion -->

	<!-- region 依赖配置 -->
	<dependencies>
		<!-- region BuildTools -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<type>pom</type>
		</dependency>
		<!-- endregion BuildTools -->

	</dependencies>
	<!-- endregion -->

	<!-- region 依赖管理 -->
	<dependencyManagement>
		<dependencies>
			<!-- region Modules -->
			<dependency>
				<groupId>com.librecoder.awesome</groupId>
				<artifactId>awesome-build-tools</artifactId>
				<version>${module.project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.librecoder.awesome</groupId>
				<artifactId>awesome-parent</artifactId>
				<version>${module.project.version}</version>
			</dependency>
			<!-- endregion -->

			<!-- region BuildTools -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${maven.lombok.version}</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${maven.groovy.version}</version>
				<type>pom</type>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>
			<!-- endregion BuildTools -->

			<!-- region TestFramework -->
			<dependency>
				<groupId>org.junit</groupId>
				<artifactId>junit-bom</artifactId>
				<version>${dependency.junit-jupiter.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<scope>test</scope>
				<version>${dependency.junit.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<scope>test</scope>
				<version>${dependency.mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-inline</artifactId>
				<version>${dependency.mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${dependency.mockito.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hsqldb</groupId>
				<artifactId>hsqldb</artifactId>
				<scope>test</scope>
				<version>${dependency.hsqldb.version}</version>
			</dependency>
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<scope>test</scope>
				<version>${dependency.h2.version}</version>
			</dependency>
			<!-- endregion -->

			<!-- region mybatis -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>${dependency.mybatis-spring.version}</version>
			</dependency>
			<!-- endregion mybatis -->
		</dependencies>
	</dependencyManagement>
	<!-- endregion -->

	<build>
		<defaultGoal>install</defaultGoal>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<!--<finalName>${project.artifactId}</finalName>-->

		<!-- region resources -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>README.md</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/groovy</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.groovy</exclude>
					<exclude>README.md</exclude>
					<exclude>.gitkeep*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>README.md</exclude>
					<exclude>.gitkeep*</exclude>
					<exclude>**/*.properties</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
		<!-- endregion -->

		<!-- region testResources -->
		<testResources>
			<testResource>
				<directory>src/test/java</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>README.md</exclude>
					<exclude>.gitkeep*</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/groovy</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.groovy</exclude>
					<exclude>README.md</exclude>
					<exclude>.gitkeep*</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>README.md</exclude>
					<exclude>.gitkeep*</exclude>
					<exclude>**/*.properties</exclude>
					<exclude>**/*.xml</exclude>
				</excludes>
				<filtering>false</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<includes>
					<include>*.xml</include>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<!-- endregion -->

		<!-- region 插件管理 -->
		<pluginManagement>
			<plugins>
				<!-- region spring-boot -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<configuration>
						<fork>true</fork>
						<classifier>boot</classifier>
						<mainClass>${start-class}</mainClass>
					</configuration>
					<executions>
						<execution>
							<id>springboot-package</id>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- endregion -->

				<!-- region maven-tools -->
				<plugin>
					<groupId>com.rimerosolutions.maven.plugins</groupId>
					<artifactId>wrapper-maven-plugin</artifactId>
					<version>0.0.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.10</version>
					<configuration>
						<addGroupIdToProjectName>true</addGroupIdToProjectName>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
						<additionalProjectnatures>
							<projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature>
						</additionalProjectnatures>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${maven.jetty.version}</version>
					<configuration>
						<reload>manual</reload>
						<stopPort>9009</stopPort>
						<httpConnector>
							<port>9001</port>
						</httpConnector>
						<webAppConfig>
							<contextPath>/</contextPath>
						</webAppConfig>
						<systemProperties>
							<systemProperty>
								<name>spring.profiles.active</name>
								<value>dev</value>
							</systemProperty>
						</systemProperties>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>${maven.tomcat.version}</version>
					<configuration>
						<port>9001</port>
						<path>/</path>
						<uriEncoding>${project.build.sourceEncoding}</uriEncoding>
						<systemProperties>
							<systemProperty>
								<name>spring.profiles.active</name>
								<value>dev</value>
							</systemProperty>
						</systemProperties>
					</configuration>
				</plugin>
				<!-- endregion -->

				<!-- region maven-lifecycle -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<!-- compile -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<id>add-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/main/java</source>
									<source>src/main/groovy</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-source</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/test/java</source>
									<source>src/test/groovy</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.groovy</groupId>
					<artifactId>groovy-eclipse-compiler</artifactId>
					<version>3.7.0</version>
					<extensions>true</extensions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<useIncrementalCompilation>false</useIncrementalCompilation>
						<compilerId>groovy-eclipse-compiler</compilerId>
						<fork>true</fork>
						<verbose>true</verbose>
						<failOnWarning>false</failOnWarning>

						<compilerArguments>
							<parameters/>
							<javaAgentClass>lombok.launch.Agent</javaAgentClass>
							<indy/>
							<!--<configScript>config.groovy</configScript>-->
						</compilerArguments>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-eclipse-compiler</artifactId>
							<version>3.7.0</version>
						</dependency>
						<dependency>
							<groupId>org.codehaus.groovy</groupId>
							<artifactId>groovy-eclipse-batch</artifactId>
							<version>3.0.8-01</version>
						</dependency>
						<dependency>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.20</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- lombok -->
				<plugin>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok-maven-plugin</artifactId>
					<version>1.18.20.0</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
					<executions>
						<execution>
							<id>generate-sources</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>delombok</goal>
							</goals>
						</execution>
						<execution>
							<id>generate-test-sources</id>
							<phase>generate-test-sources</phase>
							<goals>
								<goal>testDelombok</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- resources -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.1.0</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<overwrite>true</overwrite>
					</configuration>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<overwrite>true</overwrite>
								<outputDirectory>${project.build.outputDirectory}</outputDirectory>
								<resources>
									<resource>
										<directory>src/profile/${project.activeProfile}</directory>
									</resource>
								</resources>
							</configuration>
							<inherited>true</inherited>
						</execution>
					</executions>
				</plugin>

				<!-- source -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.1</version>
					<configuration>
						<attach>true</attach>
						<!--<excludes>**/*</excludes>-->
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>rebel.xml</exclude>
									<exclude>.gitkeep*</exclude>
								</excludes>
							</configuration>
						</execution>
						<!--
						<execution>
							<id>test-source</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar-no-fork</goal>
							</goals>
							<configuration>
								<excludes>
									<exclude>rebel.xml</exclude>
									<exclude>.gitkeep*</exclude>
								</excludes>
							</configuration>
						</execution>
						 -->
					</executions>
				</plugin>

				<!-- jar -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addClasspath>true</addClasspath>
								<classpathPrefix>${package.dependencyDirectory}/</classpathPrefix>
								<mainClass>${start-class}</mainClass>
							</manifest>
						</archive>
						<excludes>
							<exclude>rebel.xml</exclude>
							<exclude>.gitkeep*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<id>package-jar</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
						<!--
						<execution>
							<id>test-jar</id>
							<phase>package</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
						 -->
					</executions>
				</plugin>

				<!-- dependency -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
					<configuration>
						<outputDirectory>${project.build.directory}/${package.dependencyDirectory}</outputDirectory>
						<overWriteReleases>false</overWriteReleases>
						<overWriteSnapshots>false</overWriteSnapshots>
						<overWriteIfNewer>true</overWriteIfNewer>
						<!-- 表示是否不包含间接依赖的包 -->
						<excludeTransitive>false</excludeTransitive>
						<!-- 表示复制的jar文件去掉版本信息 -->
						<stripVersion>false</stripVersion>
						<!-- 表示是否建立依赖包的maven风格的目录结构 -->
						<useRepositoryLayout>false</useRepositoryLayout>
						<!-- <prependGroupId>true</prependGroupId> -->
						<includeScope>${includeScope}</includeScope>
					</configuration>
					<executions>
						<execution>
							<id>copy</id>
							<phase>package</phase>
							<goals>
								<goal>copy-dependencies</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- javadoc -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<!--<version>2.9</version>-->
					<version>3.0.0</version>
					<configuration>
						<!--<additionalparam>-Xdoclint:none</additionalparam>-->
						<doclint>none</doclint>
					</configuration>
					<executions>
						<execution>
							<id>site-doc</id>
							<phase>site</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
						<execution>
							<id>site-test-doc</id>
							<phase>site</phase>
							<goals>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- gpg -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- install -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>

				<!-- war -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>3.2.0</version>
					<configuration>
						<!--<warName>${project.artifactId}</warName>-->
						<warName>${project.build.finalName}</warName>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<packagingExcludes>
							**/rebel.xml,
							**/.gitkeep
						</packagingExcludes>
					</configuration>
				</plugin>

				<!-- assembly -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>3.1.0</version>
					<!--<version>2.4</version>-->
					<configuration>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
							</manifest>
						</archive>
						<!--
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
							<descriptorRef>project</descriptorRef>
							<descriptorRef>src</descriptorRef>
							<descriptorRef>bin</descriptorRef>
						</descriptorRefs>
						 -->
					</configuration>
					<executions>
						<execution>
							<id>jar-with-dependencies</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<descriptorRefs>
									<descriptorRef>jar-with-dependencies</descriptorRef>
								</descriptorRefs>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- native2ascii -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>native2ascii-maven-plugin</artifactId>
					<version>1.0-beta-1</version>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>native2ascii</goal>
							</goals>
							<configuration>
								<encoding>${project.build.sourceEncoding}</encoding>
								<includes>**/*.properties</includes>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- enforcer -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
					<executions>
						<execution>
							<id>default-cli</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireJavaVersion>
										<version>${maven.compiler.source}</version>
									</requireJavaVersion>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- test -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.20</version>
					<configuration>
						<!--<argLine>-Xmx512M</argLine>-->
						<includes>
							<include>**/Test*.java</include>
							<include>**/*Test.java</include>
							<include>**/*TestCase.java</include>
						</includes>
						<!--<skipTests>false</skipTests>-->
					</configuration>
				</plugin>

				<!-- cobertura -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<format>xml</format>
						<format>html</format>
					</configuration>
					<executions>
						<execution>
							<phase>test</phase>
							<goals>
								<goal>cobertura</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- endregion -->

				<!-- region maven-site -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.4</version>
					<configuration>
						<locales>zh_CN,en</locales>
						<outputDirectory>${project.build.directory}/site</outputDirectory>
						<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
						<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
						<port>9999</port>
					</configuration>
				</plugin>
				<!-- endregion -->

			</plugins>
		</pluginManagement>
		<!-- endregion -->

		<!-- region 构建插件 -->
		<plugins>
			<!-- region maven-tools -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
			</plugin>
			<!-- endregion -->

			<!-- region maven-lifecycle -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>native2ascii-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- endregion -->

			<!-- region maven-site -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>
			<!-- endregion -->

		</plugins>
		<!-- endregion -->
	</build>

	<!-- region 开发人员信息 -->
	<developers>
		<developer>
			<name>Qt</name>
			<email>kylinmania@163.com</email>
			<url>https://www.librecoder.com/</url>
			<roles>
				<role>software ngineer</role>
			</roles>
			<timezone>8</timezone>
		</developer>
	</developers>
	<!-- endregion -->

	<!-- region 许可证 -->
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>
	<!-- endregion -->

	<!-- region 持续集成信息 -->
	<ciManagement>
		<system>continuum</system>
		<url>http://www.librecoder.com</url>
		<notifiers>
			<notifier>
				<type>mail</type>
				<sendOnError>true</sendOnError>
				<sendOnFailure>true</sendOnFailure>
				<sendOnSuccess>true</sendOnSuccess>
				<sendOnWarning>false</sendOnWarning>
				<configuration>
					<address>kylinmania@163.com</address>
				</configuration>
			</notifier>
		</notifiers>
	</ciManagement>
	<!-- endregion -->

	<!-- region 问题反馈信息 -->
	<issueManagement>
		<system>issue</system>
		<url>http://www.librecoder.com</url>
	</issueManagement>
	<!-- endregion -->

	<!-- region 分发管理 -->
	<distributionManagement>
		<!-- mvn site:deploy 部署的位置 -->
		<site>
			<id>local</id>
			<name>filesystem</name>
			<url>file:${project.basedir}/site</url>
		</site>
		<repository>
			<id>local-releases</id>
			<name>Internal Releases</name>
			<url>http://localhost:8081/nexus/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>local-snapshots</id>
			<name>Internal Releases</name>
			<url>http://localhost:8081/nexus/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
	<!-- endregion -->

	<!-- region 软件配置/版本管理 -->
	<scm>
		<connection>scm:git:git@github.com:librecoder/awesome.git</connection>
		<developerConnection>scm:git:git@github.com:librecoder/awesome.git</developerConnection>
		<url>git@github.com:librecoder/awesome.git</url>
	</scm>
	<!-- endregion -->

	<!-- region 环境配置 -->
	<profiles>
		<!-- region development -->
		<profile>
			<id>dev</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
				<project.activeProfile>dev</project.activeProfile>
			</properties>
		</profile>
		<!-- endregion -->
		<!-- region Unit Testing -->
		<profile>
			<id>sut</id>
			<properties>
				<maven.test.skip>false</maven.test.skip>
				<project.activeProfile>sut</project.activeProfile>
			</properties>
		</profile>
		<!-- endregion -->
		<!-- region Integration Testing -->
		<profile>
			<id>sit</id>
			<properties>
				<maven.test.skip>false</maven.test.skip>
				<project.activeProfile>sit</project.activeProfile>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- endregion -->
		<!-- region prepared/quasi production -->
		<profile>
			<id>pre</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
				<project.activeProfile>pre</project.activeProfile>
			</properties>
		</profile>
		<!-- endregion -->
		<!-- region production -->
		<profile>
			<id>pro</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
				<project.activeProfile>pro</project.activeProfile>
			</properties>
		</profile>
		<!-- endregion -->
		<!-- region idea provided > compile -->
		<profile>
			<id>idea</id>
			<activation>
				<property>
					<name>idea.version</name>
				</property>
			</activation>
			<properties>
				<project.dependencies.scope.provided>compile</project.dependencies.scope.provided>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>add-source</id>
								<phase>generate-sources</phase>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/main/java</source>
										<source>src/main/groovy</source>
										<source>src/main/lombok</source>
									</sources>
								</configuration>
							</execution>
							<execution>
								<id>add-test-source</id>
								<phase>generate-test-sources</phase>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/test/java</source>
										<source>src/test/groovy</source>
										<source>src/test/lombok</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- endregion -->

		<!-- region ext -->
		<profile>
			<id>ext</id>
			<!-- 使用第三方镜像仓库 -->
			<repositories>
				<repository>
					<id>aliyun</id>
					<name>aliyun</name>
					<url>http://maven.aliyun.com/nexus/content/groups/public</url>
					<releases>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</releases>
					<snapshots>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</snapshots>
				</repository>
				<repository>
					<id>jcenter</id>
					<name>jcenter</name>
					<url>http://jcenter.bintray.com</url>
					<releases>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</releases>
					<snapshots>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</snapshots>
				</repository>
				<repository>
					<id>Atlassian 3rd-P Old Repository</id>
					<name>Atlassian 3rd-P Old Repository</name>
					<url>https://maven.atlassian.com/3rdparty</url>
					<releases>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</releases>
					<snapshots>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</snapshots>
				</repository>
			</repositories>
			<pluginRepositories>
				<pluginRepository>
					<id>aliyun</id>
					<name>aliyun</name>
					<url>http://maven.aliyun.com/nexus/content/groups/public</url>
					<releases>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</releases>
					<snapshots>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</snapshots>
				</pluginRepository>
				<pluginRepository>
					<id>bintray</id>
					<name>Groovy Bintray</name>
					<url>https://dl.bintray.com/groovy/maven</url>
					<releases>
						<enabled>true</enabled>
						<checksumPolicy>warn</checksumPolicy>
						<updatePolicy>always</updatePolicy>
					</releases>
					<snapshots>
						<enabled>false</enabled>
					</snapshots>
				</pluginRepository>
			</pluginRepositories>
		</profile>
		<!-- endregion -->

		<!-- region oss -->
		<profile>
			<id>oss</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
			<build>
				<plugins>
					<!-- Source -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>3.0.1</version>
						<configuration>
							<attach>true</attach>
							<excludes>**/*</excludes>
						</configuration>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>package</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
								<configuration>
									<excludes>
										<exclude>**/*</exclude>
										<exclude>rebel.xml</exclude>
										<exclude>.gitkeep*</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>3.0.0</version>
						<configuration>
							<skip>true</skip>
							<doclint>none</doclint>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- GPG -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<distributionManagement>
				<snapshotRepository>
					<id>oss</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
				</snapshotRepository>
				<repository>
					<id>oss</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>
		</profile>
		<!-- endregion -->

	</profiles>
	<!-- endregion -->


</project>
