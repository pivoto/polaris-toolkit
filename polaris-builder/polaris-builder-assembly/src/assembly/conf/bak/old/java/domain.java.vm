#parse("/vm/include.vm")
###include("vm/include.vm")
#if(${table.javaPackageName})
	#set($pkgPrefix="${table.javaPackageName}.")
#else
	#set($pkgPrefix="")
#end
package ${pkgPrefix}${env.entityPackage};

import com.yucheng.cmis.pub.CMISDomain;
import java.util.*;
import java.math.*;
import com.yucheng.cmis.pub.CMISDomain;
import com.yucheng.cmis.pub.annotation.CMISDomainAnnotation;

/**
 * $!{table.name} $!{table.comment}
 * @author $!{author}
 * @version ${current.date}
 */
public class $!{table.javaClassName} extends CMISDomain{

	public $!{table.javaClassName}(){
		init();
	}
	public $!{table.javaClassName}(Map initData){
		init();
		this.dataPool.putAll(initData);
	}

	public void init(){
		this.tableName = "$!{table.name}";
		this.primaryKey = new String[]{#foreach( $col in $!{table.pkColumns})"$!{col.name.toLowerCase()}"#if($foreach.hasNext),#end#end };
	}

#foreach($col in $!{table.columns})
	/**
	 * 获取字段 $!{col.name} 的值
	 * @return 字段 $!{col.name}, $!{col.comment}
	 */
	public $!{col.javaType} get$!{col.javaClassName}(){
#if($!{col.javaType} == 'String')
		$!{col.javaType} val = ($!{col.javaType})this.dataPool.get("$!{col.name.toLowerCase()}");
		if(val == null || val.equals("")){
			val = null;
		}
#else
		$!{col.javaType} val = ($!{col.javaType})this.dataPool.get("$!{col.name.toLowerCase()}");
#end
		return val;
	}

#*
参考: com.yucheng.cmis.channSrvIntf.util.SetDomain.tranfserParamType
@CMISDomainAnnotation(parameterType=?) 映射关系为:
1 -> String
2 -> Integer
3 -> Float
4 -> Double
5 -> BigDecimal
6 -> Boolean
7 -> 未知
*#
#set($parameterType="1")
#if($!{col.javaType} == "Integer")
	#set($parameterType="2")
#elseif($!{col.javaType} == "Float")
	#set($parameterType="3")
#elseif($!{col.javaType} == "Double")
	#set($parameterType="4")
#elseif($!{col.javaType} == "java.math.BigDecimal")
	#set($parameterType="5")
#elseif($!{col.javaType} == "Boolean")
	#set($parameterType="6")
#end
	/**
	 * 设置字段 $!{col.name} 的值
	 * @param $!{col.javaVariableName} 字段 $!{col.name}, $!{col.comment}
	 */
	@CMISDomainAnnotation(parameterType="$!{parameterType}") // jdbcType: $!{col.type}
	public void set$!{col.javaClassName}($!{col.javaType} $!{col.javaVariableName}){
		this.dataPool.put("$!{col.name.toLowerCase()}", $!{col.javaVariableName});
	}

#end

	@Override
	public Object clone() throws CloneNotSupportedException {
		super.clone();
		$!{table.javaClassName} cloneObj = new $!{table.javaClassName}();
		Map data = super.getDataMap();
		cloneObj.putData(data);
		return cloneObj;
	}

}

