#parse("/vm/include.vm")
package ${pkgPrefixTunnel}${env.modelPackage.replace('/','.')};

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import javax.validation.Valid;
import javax.validation.constraints.*;

import io.polaris.core.jdbc.annotation.Table;
import io.polaris.core.jdbc.annotation.Column;
import io.polaris.core.jdbc.annotation.Id;
import io.swagger.v3.oas.annotations.media.Schema;
import io.polaris.validation.group.*;

import lombok.*;


#foreach($name in $table.columnJavaTypes)
import $name;
#end

/**
 * $!{table.name}
 * $!{table.comment}
 * @author $!{env.author}
## * @since ${current.date}
 */
@Getter
@Setter
@EqualsAndHashCode
@ToString
@AllArgsConstructor
@NoArgsConstructor
@Builder
public class ${table.javaClassName}${env.entityDtoClassSuffix} implements Serializable {

	private static final long serialVersionUID = 1L;

#foreach($col in $table.pkColumns)
	/** 主键字段: #if(${col.comment})$!{col.name} $!{col.comment}#else$!{col.name}#end */
	@Schema(description = "#if(${col.label})$!{col.label}#else$!{col.name}#end")
	#if(${col.javaTypeSimpleName}=='String')
	@NotEmpty(groups = {Create.class, Update.class, Delete.class, Retrieve.class, UpdateEntire.class}, message = "#if($col.label)$col.label#else$col.name#end[${col.javaVariableName}]不能为空")
	#else
	@NotNull(groups = {Create.class, Update.class, Delete.class, Retrieve.class, UpdateEntire.class}, message = "#if($col.label)$col.label#else$col.name#end[${col.javaVariableName}]不能为空")
	#end
	private ${col.javaTypeSimpleName} ${col.javaVariableName};
#end

#foreach($col in $table.normalColumns)
	/** #if(${col.comment})$!{col.name} $!{col.comment}#else$!{col.name}#end */
	@Schema(description = "#if(${col.label})$!{col.label}#else$!{col.name}#end")
	#if(!${col.nullable})
		#if(${col.javaTypeSimpleName}=='String')
	@NotEmpty(groups = {Create.class, UpdateEntire.class}, message = "#if($col.label)$col.label#else$col.name#end[${col.javaVariableName}]不能为空")
		#else
	@NotNull(groups = {Create.class, UpdateEntire.class}, message = "#if($col.label)$col.label#else$col.name#end[${col.javaVariableName}]不能为空")
		#end
	#end
	private ${col.javaTypeSimpleName} ${col.javaVariableName};
#end

#if(!$table.containsColumnVariableName('createUser'))
	#if($table.containsColumnVariableName('createUserName') && $table.getColumnByVariableName('createUserName').javaTypeSimpleName == 'String')
	private Long createUser;
	#end
#end
#if(!$table.containsColumnVariableName('createUserName'))
	#if($table.containsColumnVariableName('createUser') && $table.getColumnByVariableName('createUser').javaTypeSimpleName == 'Long')
	private String createUserName;
	#end
#end
#if(!$table.containsColumnVariableName('createUserRealName'))
	#if($table.containsColumnVariableName('createUser') || $table.containsColumnVariableName('createUserName'))
	private String createUserRealName;
	#end
#end
#if(!$table.containsColumnVariableName('updateUser'))
	#if($table.containsColumnVariableName('updateUserName') && $table.getColumnByVariableName('updateUserName').javaTypeSimpleName == 'String')
	private Long updateUser;
	#end
#end
#if(!$table.containsColumnVariableName('updateUserName'))
	#if($table.containsColumnVariableName('updateUser') && $table.getColumnByVariableName('updateUser').javaTypeSimpleName == 'Long')
	private String updateUserName;
	#end
#end
#if(!$table.containsColumnVariableName('updateUserRealName'))
	#if($table.containsColumnVariableName('updateUser') || $table.containsColumnVariableName('updateUserName'))
	private String updateUserRealName;
	#end
#end
#if(!$table.containsColumnVariableName('crtUserId'))
	#if($table.containsColumnVariableName('crtUser') && $table.getColumnByVariableName('crtUser').javaTypeSimpleName == 'String')
	private Long crtUserId;
	#elseif($table.containsColumnVariableName('crtUserName'))
	private Long crtUserId;
	#end
#end
#if(!$table.containsColumnVariableName('crtUserName'))
	#if($table.containsColumnVariableName('crtUser') && $table.getColumnByVariableName('crtUser').javaTypeSimpleName == 'Long')
	private String crtUserName;
	#elseif($table.containsColumnVariableName('crtUserId'))
	private String crtUserName;
	#end
#end
#if(!$table.containsColumnVariableName('crtUserRealName'))
	#if($table.containsColumnVariableName('crtUser')
		|| $table.containsColumnVariableName('crtUserId') || $table.containsColumnVariableName('crtUserName'))
	private String crtUserRealName;
	#end
#end
#if(!$table.containsColumnVariableName('uptUserId'))
	#if($table.containsColumnVariableName('uptUser') && $table.getColumnByVariableName('uptUser').javaTypeSimpleName == 'String')
	private Long uptUserId;
	#elseif($table.containsColumnVariableName('uptUserName'))
	private Long uptUserId;
	#end
#end
#if(!$table.containsColumnVariableName('uptUserName'))
	#if($table.containsColumnVariableName('uptUser') && $table.getColumnByVariableName('uptUser').javaTypeSimpleName == 'Long')
	private String uptUserName;
	#elseif($table.containsColumnVariableName('uptUserId'))
	private String uptUserName;
	#end
#end
#if(!$table.containsColumnVariableName('uptUserRealName'))
	#if($table.containsColumnVariableName('uptUser')
		|| $table.containsColumnVariableName('uptUserId') || $table.containsColumnVariableName('uptUserName'))
	private String uptUserRealName;
	#end
#end


}
