#parse("/vm/include.vm")
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${pkgPrefix}${env.mapperPackage}.${table.javaClassName}${env.mapperClassSuffix}">
	<resultMap id="${table.javaVariableName}${env.entityClassSuffix}Map" type="${pkgPrefix}${env.entityPackage}.${table.javaClassName}${env.entityClassSuffix}">
	#foreach($col in ${table.pkColumns})
		<id column="${col.name}" property="${col.javaVariableName}" />
	#end
	#foreach($col in $table.normalColumns)
		<result column="${col.name}" property="${col.javaVariableName}" />
	#end
	</resultMap>

	<sql id="selectClause">
		SELECT
			${empty}#foreach($col in ${table.pkColumns})${col.name}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end,
			${empty}#foreach($col in $table.normalColumns)${col.name}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end
		FROM ${table.name}
	</sql>

	<sql id="whereClause">
		<where>
#foreach($col in $table.columns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
			<if test="${col.javaVariableName} != null">
				<if test="@io.polaris.mybatis.util.MybatisToolkit@isNotEmpty(${col.javaVariableName})">
					<choose>
						<when test="${col.javaVariableName}.getClass().isArray()">
							AND ${col.name} in (
							<foreach collection="${col.javaVariableName}" item="item" separator=",">
								#{item}
							</foreach>
							)
						</when>
						<when test="${col.javaVariableName} instanceof java.lang.Iterable">
							AND ${col.name} in (
							<foreach collection="${col.javaVariableName}" item="item" separator=",">
								#{item}
							</foreach>
							)
						</when>
						<when test="@io.polaris.mybatis.util.MybatisToolkit@isLikeString(${col.javaVariableName})">AND ${col.name} like #{${col.javaVariableName}}</when>
						<otherwise>AND ${col.name} = #{${col.javaVariableName}}</otherwise>
					</choose>
				</if>
			</if>
#else

	#if(${col.jdbcType} == 'DATE' || ${col.jdbcType} == 'TIMESTAMP')
			<if test="${col.javaVariableName} != null">
				<choose>
					<when test="${col.javaVariableName}.getClass().isArray()">
						<if test="${col.javaVariableName}.length > 0 and ${col.javaVariableName}[0] != null">
							AND ${col.name} >= #{${col.javaVariableName}[0]}
						</if>
						<if test="${col.javaVariableName}.length > 1 and ${col.javaVariableName}[1] != null">
							AND ${col.name} &lt;= #{${col.javaVariableName}[1]}
						</if>
					</when>
					<otherwise>AND ${col.name} = #{${col.javaVariableName}}</otherwise>
				</choose>
			</if>
	#else
			<if test="${col.javaVariableName} != null">
				AND ${col.name} = #{${col.javaVariableName}}
				<choose>
					<when test="${col.javaVariableName}.getClass().isArray()">
						AND ${col.name} in (
						<foreach collection="${col.javaVariableName}" item="item" separator=",">
							#{item}
						</foreach>
						)
					</when>
					<when test="${col.javaVariableName} instanceof java.lang.Iterable">
						AND ${col.name} in (
						<foreach collection="${col.javaVariableName}" item="item" separator=",">
							#{item}
						</foreach>
						)
					</when>
					<otherwise>AND ${col.name} = #{${col.javaVariableName}}</otherwise>
				</choose>
			</if>
	#end
#end
#end
		</where>
	</sql>
	<sql id="orderClause">
		<if test="@io.polaris.mybatis.util.MybatisToolkit@hasProperty(_parameter, 'sqlOrderBy')">
			ORDER BY ${dollar}{sqlOrderBy}
		</if>
	</sql>

	<select id="doCount" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}" resultType="int">
		SELECT COUNT(*) FROM ${table.name}
		<include refid="whereClause"/>
	</select>

	<select id="doGetUnique" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}" resultMap="${table.javaVariableName}${env.entityClassSuffix}Map">
		<include refid="selectClause"/>
		<include refid="whereClause"/>
	</select>

	<select id="doGetAll" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}" resultMap="${table.javaVariableName}${env.entityClassSuffix}Map">
		<include refid="selectClause"/>
		<include refid="whereClause"/>
		<include refid="orderClause"/>
	</select>

	<select id="doGetById" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}" resultMap="${table.javaVariableName}${env.entityClassSuffix}Map">
		<include refid="selectClause"/>
		<where>
#foreach($col in $table.pkColumns)
				AND ${col.name} = #{${col.javaVariableName}}
#end
		</where>
	</select>

	<insert id="doInsert" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}"#if(${config['mysql.useGeneratedKeys']} == 'true') useGeneratedKeys="true" keyProperty="${table.pkColumns[0].javaVariableName}"#end>
		INSERT INTO ${table.name}(
			${empty}#foreach($col in ${table.pkColumns})${col.name}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end,
			${empty}#foreach($col in $table.normalColumns)${col.name}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end
		)
		VALUES(
			${empty}#foreach($col in ${table.pkColumns})#{${col.javaVariableName},jdbcType=${col.jdbcType}}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end,
			${empty}#foreach($col in $table.normalColumns)#{${col.javaVariableName},jdbcType=${col.jdbcType}}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end
		)
	</insert>

	<insert id="doInsertSelective" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}"#if(${config['mysql.useGeneratedKeys']} == 'true') useGeneratedKeys="true" keyProperty="${table.pkColumns[0].javaVariableName}"#end>
		INSERT INTO ${table.name}(
			${empty}#foreach($col in ${table.pkColumns})${col.name}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end
#foreach($col in $table.normalColumns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
			<if test="${col.javaVariableName} != null and ${col.javaVariableName} != ''">,${col.name}</if>
#else
			<if test="${col.javaVariableName} != null">,${col.name}</if>
#end
#end
		)
		VALUES(
			${empty}#foreach($col in ${table.pkColumns})#{${col.javaVariableName},jdbcType=${col.jdbcType}}#if(${foreach.hasNext}),#set($tmp=${foreach.count} % 5)#if($tmp == 0)${lf}${tab}${tab}${tab}#end#end#end
#foreach($col in $table.normalColumns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
			<if test="${col.javaVariableName} != null and ${col.javaVariableName} != ''">,#{${col.javaVariableName}}</if>
#else
			<if test="${col.javaVariableName} != null">,#{${col.javaVariableName}}</if>
	#end
#end
		)
	</insert>

	<update id="doUpdate" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}">
		UPDATE ${table.name}
			<trim prefix="SET" suffixOverrides=",">
#foreach($col in $table.pkColumns)
					${col.name} = #{${col.javaVariableName}},
#end
#foreach($col in $table.normalColumns)
					${col.name} = #{${col.javaVariableName}},
#end
			</trim>
		WHERE
			<trim prefix="" suffixOverrides="AND">
#foreach($col in $table.pkColumns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
			<if test="${col.javaVariableName} != null and ${col.javaVariableName} != ''">
				${col.name} = #{${col.javaVariableName}} AND
			</if>
#else
			<if test="${col.javaVariableName} != null">
				${col.name} = #{${col.javaVariableName}} AND
			</if>
#end
#end
			</trim>
	</update>

	<update id="doUpdateSelective" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}">
		UPDATE ${table.name}
			<trim prefix="SET" suffixOverrides=",">
#foreach($col in $table.pkColumns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
				<if test="${col.javaVariableName} != null and ${col.javaVariableName} != ''">
					${col.name} = #{${col.javaVariableName}},
				</if>
#else
				<if test="${col.javaVariableName} != null">
					${col.name} = #{${col.javaVariableName}},
				</if>
#end
#end
#foreach($col in $table.normalColumns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
				<if test="${col.javaVariableName} != null and ${col.javaVariableName} != ''">
					${col.name} = #{${col.javaVariableName}},
				</if>
#else
				<if test="${col.javaVariableName} != null">
					${col.name} = #{${col.javaVariableName}},
				</if>
#end
#end
			</trim>
		WHERE
			<trim prefix="" suffixOverrides="AND">
#foreach($col in $table.pkColumns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
			<if test="${col.javaVariableName} != null and ${col.javaVariableName} != ''">
				${col.name} = #{${col.javaVariableName}} AND
			</if>
#else
			<if test="${col.javaVariableName} != null">
				${col.name} = #{${col.javaVariableName}} AND
			</if>
#end
#end
			</trim>
	</update>


	<update id="doUpdateMultiple" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}">
		UPDATE ${table.name}
		<trim prefix="SET" suffixOverrides=",">
			<if test="@io.polaris.mybatis.util.MybatisToolkit@hasProperty(_parameter, 'sqlUpdateValues')">
#foreach($col in $table.pkColumns)
	#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
				<if test="sqlUpdateValues.${col.javaVariableName} != null and sqlUpdateValues.${col.javaVariableName} != ''">
					${col.name} = #{sqlUpdateValues.${col.javaVariableName}},
				</if>
	#else
				<if test="sqlUpdateValues.${col.javaVariableName} != null">
					${col.name} = #{sqlUpdateValues.${col.javaVariableName}},
				</if>
	#end
#end
#foreach($col in $table.normalColumns)
	#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
					<if test="sqlUpdateValues.${col.javaVariableName} != null and sqlUpdateValues.${col.javaVariableName} != ''">
						${col.name} = #{sqlUpdateValues.${col.javaVariableName}},
					</if>
	#else
					<if test="sqlUpdateValues.${col.javaVariableName} != null">
						${col.name} = #{sqlUpdateValues.${col.javaVariableName}},
					</if>
	#end
#end
			</if>
		</trim>
		<include refid="whereClause"/>
	</update>

	<delete id="doDelete" parameterType="${pkgPrefix}entity.${table.javaClassName}${env.entityClassSuffix}">
		DELETE FROM ${table.name}
		WHERE
			<trim prefix="" suffixOverrides="AND">
#foreach($col in $table.pkColumns)
#if(${col.jdbcType} == 'VARCHAR' || ${col.jdbcType} == 'CHAR')
			<if test="${col.javaVariableName} != null and ${col.javaVariableName} != ''">
				${col.name} = #{${col.javaVariableName}} AND
			</if>
#else
			<if test="${col.javaVariableName} != null">
				${col.name} = #{${col.javaVariableName}} AND
			</if>
#end
#end
			</trim>
	</delete>

</mapper>
