# 自定义规则验证
io.polaris.validation.RuntimeValidated.message=不满足校验规则
io.polaris.validation.CustomValidated.message=不满足校验规则
io.polaris.validation.DecimalScale.message=精度必须在`{min}`和`{max}`之间
io.polaris.validation.LengthEquals.message=长度必须等于`{value}`
io.polaris.validation.GreaterThan.message=必须大于`{value}`
io.polaris.validation.Numeric.message=必须为数字
io.polaris.validation.LessThan.message=必须小于`{value}`
io.polaris.validation.LengthMax.message=长度不能大于`{value}`
io.polaris.validation.LengthMin.message=长度不能小于`{value}`
io.polaris.validation.NotNone.message=不能为空
io.polaris.validation.LengthRange.message=长度必须在`{min}`和`{max}`之间
io.polaris.validation.Regexp.message=必须匹配正则表达式`{value}`
io.polaris.validation.Identifier.message=必须匹配字符串标识符书写格式
io.polaris.validation.InEnum.message=必须在指定取值范围`{value}`内
io.polaris.validation.InString.message=必须在指定取值范围`{value}`内
io.polaris.validation.InNumber.message=必须在指定取值范围`{value}`内
io.polaris.validation.Mobile.message=手机号格式不正确
io.polaris.validation.Telephone.message=电话格式不正确
# javax 内置规则
javax.validation.constraints.AssertFalse.message=只能为false
javax.validation.constraints.AssertTrue.message=只能为true
javax.validation.constraints.DecimalMax.message=必须小于或等于`{value}`
javax.validation.constraints.DecimalMin.message=必须大于或等于`{value}`
javax.validation.constraints.Digits.message=数字的值超出了允许范围(只允许在`{integer}`位整数和`{fraction}`位小数范围内)
javax.validation.constraints.Email.message=不是一个合法的电子邮件地址
javax.validation.constraints.Future.message=必须是一个将来的时间
javax.validation.constraints.FutureOrPresent.message=必须是一个将来或现在的时间
javax.validation.constraints.Max.message=最大不能超过`{value}`
javax.validation.constraints.Min.message=最小不能小于`{value}`
javax.validation.constraints.Negative.message=必须是一个负数
javax.validation.constraints.NegativeOrZero.message=必须是一个负数或0
javax.validation.constraints.NotBlank.message=不能为空
javax.validation.constraints.NotEmpty.message=不能为空
javax.validation.constraints.NotNull.message=不能为空
javax.validation.constraints.Null.message=必须为空
javax.validation.constraints.Past.message=必须是一个过去的时间
javax.validation.constraints.PastOrPresent.message=必须是一个过去或现在的时间
javax.validation.constraints.Pattern.message=必须匹配正则表达式"`{regexp}`"
javax.validation.constraints.Positive.message=必须是一个正数
javax.validation.constraints.PositiveOrZero.message=必须是一个正数或0
javax.validation.constraints.Size.message=个数必须在`{min}`和`{max}`之间
# hibernate 扩展规则
org.hibernate.validator.constraints.CreditCardNumber.message=不合法的信用卡号码
org.hibernate.validator.constraints.Email.message=不是一个合法的电子邮件地址
org.hibernate.validator.constraints.Length.message=长度必须在`{min}`和`{max}`之间
org.hibernate.validator.constraints.NotBlank.message=不能为空
org.hibernate.validator.constraints.NotEmpty.message=不能为空
org.hibernate.validator.constraints.Range.message=必须在`{min}`和`{max}`之间
org.hibernate.validator.constraints.SafeHtml.message=可能有不安全的HTML内容
org.hibernate.validator.constraints.ScriptAssert.message=执行脚本表达式"`{script}`"没有能够得到true
org.hibernate.validator.constraints.URL.message=必须是一个合法的URL
