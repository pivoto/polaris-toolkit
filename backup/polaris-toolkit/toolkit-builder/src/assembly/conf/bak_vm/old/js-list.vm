#set($dollar='$')
var dtGridColumns = [
#foreach($col in $table.pkColumns)
	{
		id : '$col.javaVariableName',
		title : '#if($col.comment)$col.comment#else$col.name#end',
		type : 'string',
		columnClass : 'text-center',
		hideType : 'xs',
		headerClass : 'dlshouwen-grid-header'
	},
#end
#foreach($col in $table.normalColumns)
	{
		id : '$col.javaVariableName',
		title : '#if($col.comment)$col.comment#else$col.name#end',
#if(${col.javaClassType.endsWith("Date")})
		type : 'date',
	    format : 'yyyy-MM-dd hh:mm:ss',
	    otype : 'time_stamp_ms',
#elseif(${col.javaClassType.endsWith("Timestamp")})
		type : 'date',
		format : 'yyyy-MM-dd hh:mm:ss',
		otype : 'time_stamp_ms',
#else
		type : 'string',
#end
		columnClass : 'text-center',
		hideType : 'xs',
		headerClass : 'dlshouwen-grid-header'
	}#if(${velocityCount} < ${table.normalColumns.size()}),#end

#end
];

var pageSize = ${dollar}("#pageSize").val();
pageSize = pageSize == 0 || pageSize == "" ? sys.pageNum : pageSize;

var dtGridOption = {
	lang : 'zh-cn',
	ajaxLoad : true,
	check : true,
	checkWidth :'37px',
	extraWidth : '37px',
	loadURL : sys.rootPath + '/$!{config.get("tableClassify").concat("/")}${table.xmlName}/list.html',
	columns : dtGridColumns,
	gridContainer : 'dtGridContainer',
	toolbarContainer : 'dtGridToolBarContainer',
	tools : 'refresh|print|export[excel,csv,pdf,txt]',
	exportFileName : '$!{table.comment}',
	pageSize : pageSize,
	pageSizeLimit : [10, 20, 30, 50, 100, 200, 300, 500]
};

var grid = ${dollar}.fn.dlshouwen.grid.init(dtGridOption);

function customSearch() {
	grid.parameters = new Object();
	grid.parameters['${table.pkColumns[0].name}'] = ${dollar}("#searchKey").val();
	grid.refresh(true);
}

${dollar}(function() {
	if(null != ${dollar}("#orderByColumn").val() && '' != ${dollar}("#orderByColumn").val()){
		grid.sortParameter.columnId = ${dollar}("#orderByColumn").val();
		grid.sortParameter.sortType = ${dollar}("#orderByType").val();
	}
	grid.load();
	
	// [start] search
	${dollar}("#btnSearch").click(customSearch);
	document.onkeypress = function(e){
	var ev = document.all ? window.event : e;
		if(ev.keyCode==13) {
			customSearch();
		}
	};
	
	// [end] search
	// [start] add
	${dollar}("#btnAdd").click(function(){
		//加载新增页面
		antengine.common.loadPage('/$!{config.get("tableClassify").concat("/")}${table.xmlName}/toadd.html');
	});
	// [end] add
	// [start] edit
	${dollar}("#btnEdit").click(function(){
		//当前页码
		var nowPage = grid.pager.nowPage;
		//获取每页显示的记录数(即: select框中的10,20,30)
		var pageSize = grid.pager.pageSize;
		//获取排序字段
		var columnId = grid.sortParameter.columnId;
		//获取排序方式 [0-不排序，1-正序，2-倒序]
		var sortType = grid.sortParameter.sortType;
		//获取选择的行
		var rows = grid.getCheckedRecords();
		if (rows.length != 1) {
			layer.msg("你没有选择行或选择了多行数据", {
				icon : 0
			});
			return;
		}
		var nav = '/$!{config.get("tableClassify").concat("/")}${table.xmlName}/toedit.html';
#foreach($col in $table.pkColumns)
		nav += '?${col.javaVariableName}=' + rows[0].${col.javaVariableName};
#end
		nav += "&page=" + nowPage + "&rows=" + pageSize + "&sidx=" + columnId + "&sord=" + sortType;
		antengine.common.loadPage(nav);
	});
	// [end] edit
	// [start] delete
	${dollar}("#btnDel").click(function(){
		var rows = grid.getCheckedRecords();
		if (rows.length != 1) {
			layer.msg("你没有选择行或选择了多行数据", {
				icon : 0
			});
			return;
		}

		layer.confirm('确认删除吗？', {
			icon : 3,
			title : '删除提示'
		}, function(index, layero) {
			${dollar}.ajax({
				type : "POST",
				url : sys.rootPath + '/$!{config.get("tableClassify").concat("/")}${table.xmlName}/delete.html',
				data : {
#foreach($col in $table.pkColumns)
					'${col.javaVariableName}':rows[0].${col.javaVariableName}#if(${velocityCount} < ${table.pkColumns.size()}),#end
#end
				},
				dataType : "json",
				success : function(resultdata) {
					if (resultdata.success) {
						layer.msg(resultdata.message, {
							icon : 1
						});
						if (customSearch) {
							customSearch();
						}
					} else {
						layer.msg(resultdata.message, {
							icon : 5
						});
					}
				},
				error : function(errorMsg) {
					layer.msg('服务器未响应,请稍后再试', {
						icon : 3
					});
				}
			});
			layer.close(index);
		});
	});
	// [end] delete
});
