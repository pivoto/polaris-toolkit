#parse("/booster/include.vm")
###include("booster/include.vm")
package ${pkgPrefix}${env.entityPackage};

#javaImports()

#javaAuthor()
@Entity
@Table(name = "${table.name}")
@Getter
@Setter
@EqualsAndHashCode(callSuper = false)
@Component
@Scope(ConfigurableBeanFactory.SCOPE_PROTOTYPE)
@AttributeOverrides(
	@AttributeOverride(name = "id", column = @Column(name = "${table.pkColumns[0].name}"))
)
public class ${table.javaClassName} extends ${baseEntity}{

	private static final long serialVersionUID = 1L;

#set($ignoreColumns={
	'id':true,'org_id':true,
	'deleted':true,
	'create_user':true,
	'update_user':true,
	'create_date':true,
	'update_date':true
})
	// region columns

#foreach($col in $!{table.columns})
#if(!${col.generated} && !$ignoreColumns.containsKey($col.name.toLowerCase()))
	/**
	 * $!{col.comment}
	 * 列名: $!{col.name}#if(${col.primary}), 主键#end#if(${col.notNull}), 非空#end#if(${col.defaultValue}), 默认值: ${col.defaultValue}#end
	 */
	#if(${col.javaType} eq 'java.util.Date')
	@Temporal(TemporalType.DATE)
	@Column(name = "${col.name}")
	@Comment("$!{col.comment}")
	private java.util.Date ${col.javaVariableName};
	#elseif(${col.javaType} eq 'java.sql.Timestamp')
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "${col.name}")
	@Comment("$!{col.comment}")
	private java.util.Date ${col.javaVariableName};
	#elseif(${col.jdbcType} eq 'TINYINT' && ${col.comment.contains('是否')})
	@Column(name = "${col.name}")
	@Comment("$!{col.comment}")
	private Boolean ${col.javaVariableName};
	#else
	@Column(name = "${col.name}")
	@Comment("$!{col.comment}")
	private ${col.javaType} ${col.javaVariableName};
	#end

#end
#end

	// endregion columns


	// region constructor

	public $!{table.javaClassName}() {
	}

	public $!{table.javaClassName}(#foreach($col in $!{table.pkColumns})#if(${col.javaType} eq 'java.util.Date' || ${col.javaType} eq 'java.sql.Timestamp')
		#set($colType='java.util.Date')
	#elseif(${col.jdbcType} eq 'TINYINT' && ${col.comment.contains('是否')})
		#set($colType='Boolean')
	#else
		#set($colType="${col.javaType}")
	#end$!{colType} ${col.javaVariableName}#if($foreach.hasNext), #end#end) {
	#foreach($col in $!{table.pkColumns})
		this.set${col.javaClassName}(${col.javaVariableName});
	#end
	}

	@Builder
	public $!{table.javaClassName}(
	#foreach($col in $!{table.columns})
	#if(!${col.generated} && !$ignoreColumns.containsKey($col.name.toLowerCase()))
		#if(${col.javaType} eq 'java.util.Date' || ${col.javaType} eq 'java.sql.Timestamp')
			#set($colType='java.util.Date')
		#elseif(${col.jdbcType} eq 'TINYINT' && ${col.comment.contains('是否')})
			#set($colType='Boolean')
		#else
			#set($colType="${col.javaType}")
		#end
		$!{colType} ${col.javaVariableName}#if($foreach.hasNext), #end
	#end
	#end
	) {

	#foreach($col in $!{table.columns})
	#if(!${col.generated} && !$ignoreColumns.containsKey($col.name.toLowerCase()))
		this.set${col.javaClassName}(${col.javaVariableName});
	#end
	#end
	}

	// endregion constructor

}
